[Chapter 1]

What is scope?

Is JS a compiled or interpreted language?

What are the three steps of compilation?

What is tokenizing?

What is Parsing?

What is Code-Generation?

What is a RHS look-up?

What is a LHS look-up?

If a variable cannot be found in the immediate scope, what does Engine do?

What does ReferenceError imply?

What does TypeError emply?

[Chapter 2]

What are the two predominant models for how scope works?

What is lexical scope?

When does scope look-up stop?

What is "shadowing"?

[Chapter 3]

How do you distinguish between a function declaration and a function expression?

What does 'let' do?

Are 'let' declarations hoisted?

[Chapter 4]

Which are hoisted first, function declarations or variable declarations?

What happens to duplicate var declarations?

What happens to duplicate function declarations?

[Chapter 5]

Closure is...

Modules require two key characteristics:












